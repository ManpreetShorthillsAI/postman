{"ast":null,"code":"var _jsxFileName = \"/home/shtlp_0172/Desktop/postman/postman_project/src/components/playground/RequestBody.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { Context } from '../../contexts/Store';\nimport styles from './playground.module.css';\nimport RawPayload from './RawPayload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RequestBody = () => {\n  _s();\n\n  const {\n    state\n  } = useContext(Context);\n  const [bodyType, setBodyType] = useState(state.formData.payload ? 'raw' : '');\n  const [rawBodyType, setRawBodyType] = useState('json');\n\n  const handleChange = event => {\n    setBodyType(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: state.responsePanelMinimized || state.splitView === 'V' ? styles.payload_wrapper_full : styles.payload_wrapper,\n    style: {\n      borderColor: 'transparent'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inline_radios,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio-body-none\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"\",\n          checked: bodyType === '',\n          id: \"radio-body-none\",\n          onChange: handleChange,\n          name: \"bodyType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio-body-form-data\",\n        className: styles.disabled_radio,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"form-data\",\n          checked: bodyType === 'form-data',\n          id: \"radio-body-form-data\",\n          onChange: handleChange,\n          name: \"bodyType\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \"form-data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio-body-urlencoded\",\n        className: styles.disabled_radio,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"url-encoded\",\n          id: \"radio-body-urlencoded\",\n          onChange: handleChange,\n          name: \"bodyType\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \"x-www-form-encoded\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio-body-raw\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"raw\",\n          checked: bodyType === 'raw',\n          id: \"radio-body-raw\",\n          onChange: handleChange,\n          name: \"bodyType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), \"raw\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio-body-binary\",\n        className: styles.disabled_radio,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"binary\",\n          id: \"radio-body-binary\",\n          onChange: handleChange,\n          name: \"bodyType\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), \"binary\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio-body-gql\",\n        className: styles.disabled_radio,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"graphql\",\n          id: \"radio-body-gql\",\n          onChange: handleChange,\n          name: \"bodyType\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), \"GraphQL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), bodyType === 'raw' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.raw_body_options,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.raw_body_formats,\n          value: rawBodyType,\n          onChange: e => setRawBodyType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            disabled: true,\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"auto\",\n            disabled: true,\n            children: \"Javascript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"json\",\n            children: \"JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"html\",\n            disabled: true,\n            children: \"HTML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"xml\",\n            disabled: true,\n            children: \"XML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"button\",\n          className: styles.beautify_btn,\n          children: \"Beautify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [bodyType === '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.no_body_panel,\n        children: \"This request does not have a body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), bodyType === 'form-data' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.no_body_panel,\n        children: \"form data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), bodyType === 'raw' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.raw_body_panel,\n        children: /*#__PURE__*/_jsxDEV(RawPayload, {\n          mode: rawBodyType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RequestBody, \"+I6UMMXXkpgKtx/jvI4J/29G+T0=\");\n\n_c = RequestBody;\nexport default RequestBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestBody\");","map":{"version":3,"sources":["/home/shtlp_0172/Desktop/postman/postman_project/src/components/playground/RequestBody.js"],"names":["useContext","useState","Context","styles","RawPayload","RequestBody","state","bodyType","setBodyType","formData","payload","rawBodyType","setRawBodyType","handleChange","event","target","value","responsePanelMinimized","splitView","payload_wrapper_full","payload_wrapper","borderColor","inline_radios","disabled_radio","raw_body_options","raw_body_formats","e","beautify_btn","no_body_panel","raw_body_panel"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\nimport { Context } from '../../contexts/Store';\nimport styles from './playground.module.css';\nimport RawPayload from './RawPayload';\n\nconst RequestBody = () => {\n  const { state } = useContext(Context);\n  const [bodyType, setBodyType] = useState(state.formData.payload ? 'raw' : '');\n  const [rawBodyType, setRawBodyType] = useState('json');\n\n  const handleChange = (event) => {\n    setBodyType(event.target.value);\n  };\n\n  return (\n    <div\n      className={\n        state.responsePanelMinimized || state.splitView === 'V'\n          ? styles.payload_wrapper_full\n          : styles.payload_wrapper\n      }\n      style={{ borderColor: 'transparent' }}\n    >\n      <div className={styles.inline_radios}>\n        <label htmlFor=\"radio-body-none\">\n          <input\n            type=\"radio\"\n            value=\"\"\n            checked={bodyType === ''}\n            id=\"radio-body-none\"\n            onChange={handleChange}\n            name=\"bodyType\"\n          />\n          None\n        </label>\n        <label htmlFor=\"radio-body-form-data\" className={styles.disabled_radio}>\n          <input\n            type=\"radio\"\n            value=\"form-data\"\n            checked={bodyType === 'form-data'}\n            id=\"radio-body-form-data\"\n            onChange={handleChange}\n            name=\"bodyType\"\n            disabled\n          />\n          form-data\n        </label>\n        <label\n          htmlFor=\"radio-body-urlencoded\"\n          className={styles.disabled_radio}\n        >\n          <input\n            type=\"radio\"\n            value=\"url-encoded\"\n            id=\"radio-body-urlencoded\"\n            onChange={handleChange}\n            name=\"bodyType\"\n            disabled\n          />\n          x-www-form-encoded\n        </label>\n        <label htmlFor=\"radio-body-raw\">\n          <input\n            type=\"radio\"\n            value=\"raw\"\n            checked={bodyType === 'raw'}\n            id=\"radio-body-raw\"\n            onChange={handleChange}\n            name=\"bodyType\"\n          />\n          raw\n        </label>\n        <label htmlFor=\"radio-body-binary\" className={styles.disabled_radio}>\n          <input\n            type=\"radio\"\n            value=\"binary\"\n            id=\"radio-body-binary\"\n            onChange={handleChange}\n            name=\"bodyType\"\n            disabled\n          />\n          binary\n        </label>\n        <label htmlFor=\"radio-body-gql\" className={styles.disabled_radio}>\n          <input\n            type=\"radio\"\n            value=\"graphql\"\n            id=\"radio-body-gql\"\n            onChange={handleChange}\n            name=\"bodyType\"\n            disabled\n          />\n          GraphQL\n        </label>\n        {bodyType === 'raw' && (\n          <div className={styles.raw_body_options}>\n            <select\n              className={styles.raw_body_formats}\n              value={rawBodyType}\n              onChange={(e) => setRawBodyType(e.target.value)}\n            >\n              <option value=\"text\" disabled>\n                Text\n              </option>\n              <option value=\"auto\" disabled>\n                Javascript\n              </option>\n              <option value=\"json\">JSON</option>\n              <option value=\"html\" disabled>\n                HTML\n              </option>\n              <option value=\"xml\" disabled>\n                XML\n              </option>\n            </select>\n            <span role=\"button\" className={styles.beautify_btn}>\n              Beautify\n            </span>\n          </div>\n        )}\n      </div>\n      <div>\n        {bodyType === '' && (\n          <div className={styles.no_body_panel}>\n            This request does not have a body\n          </div>\n        )}\n        {bodyType === 'form-data' && (\n          <div className={styles.no_body_panel}>form data</div>\n        )}\n        {bodyType === 'raw' && (\n          <div className={styles.raw_body_panel}>\n            <RawPayload mode={rawBodyType} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RequestBody;\n"]},"metadata":{},"sourceType":"module"}