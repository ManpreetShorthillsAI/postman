{"ast":null,"code":"var _jsxFileName = \"/home/shtlp_0172/Desktop/postman/postman_project/src/contexts/Store.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from 'react';\nimport StoreReducer from './StoreReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  overviewTab: 'hidden',\n  sideDrawerOpened: false,\n  sideDrawerTab: 'history',\n  infoPanelOpened: false,\n  splitView: 'H',\n  responsePanelMinimized: false,\n  formData: {\n    method: '',\n    url: '',\n    params: '',\n    payload: null\n  },\n  auth: '',\n  authHeader: '',\n  authLocation: 'header',\n  requestHeaders: [],\n  formSubmitted: false,\n  responseUI: false,\n  apiResponse: {},\n  apiError: null\n};\nconst localState = JSON.parse(sessionStorage.getItem('_post_man'));\n\nconst Store = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(StoreReducer, localState || initialState);\n  useEffect(() => {\n    sessionStorage.setItem('_post_man', JSON.stringify(state));\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Store, \"hIJqd2Z7TViwRPCwSE8PSo9kW88=\");\n\n_c = Store;\nexport const Context = /*#__PURE__*/createContext(initialState);\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/home/shtlp_0172/Desktop/postman/postman_project/src/contexts/Store.js"],"names":["createContext","useEffect","useReducer","StoreReducer","initialState","overviewTab","sideDrawerOpened","sideDrawerTab","infoPanelOpened","splitView","responsePanelMinimized","formData","method","url","params","payload","auth","authHeader","authLocation","requestHeaders","formSubmitted","responseUI","apiResponse","apiError","localState","JSON","parse","sessionStorage","getItem","Store","children","state","dispatch","setItem","stringify","Context"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,QADM;AAEnBC,EAAAA,gBAAgB,EAAE,KAFC;AAGnBC,EAAAA,aAAa,EAAE,SAHI;AAInBC,EAAAA,eAAe,EAAE,KAJE;AAKnBC,EAAAA,SAAS,EAAE,GALQ;AAMnBC,EAAAA,sBAAsB,EAAE,KANL;AAOnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,EADA;AAERC,IAAAA,GAAG,EAAE,EAFG;AAGRC,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,OAAO,EAAE;AAJD,GAPS;AAanBC,EAAAA,IAAI,EAAE,EAba;AAcnBC,EAAAA,UAAU,EAAE,EAdO;AAenBC,EAAAA,YAAY,EAAE,QAfK;AAgBnBC,EAAAA,cAAc,EAAE,EAhBG;AAiBnBC,EAAAA,aAAa,EAAE,KAjBI;AAkBnBC,EAAAA,UAAU,EAAE,KAlBO;AAmBnBC,EAAAA,WAAW,EAAE,EAnBM;AAoBnBC,EAAAA,QAAQ,EAAE;AApBS,CAArB;AAuBA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,CAAnB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9B,UAAU,CAClCC,YADkC,EAElCqB,UAAU,IAAIpB,YAFoB,CAApC;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,cAAc,CAACM,OAAf,CAAuB,WAAvB,EAAoCR,IAAI,CAACS,SAAL,CAAeH,KAAf,CAApC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAzB;AAAA,cAA+CF;AAA/C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAZD;;GAAMD,K;;KAAAA,K;AAcN,OAAO,MAAMM,OAAO,gBAAGnC,aAAa,CAACI,YAAD,CAA7B;AACP,eAAeyB,KAAf","sourcesContent":["import { createContext, useEffect, useReducer } from 'react';\nimport StoreReducer from './StoreReducer';\n\nconst initialState = {\n  overviewTab: 'hidden',\n  sideDrawerOpened: false,\n  sideDrawerTab: 'history',\n  infoPanelOpened: false,\n  splitView: 'H',\n  responsePanelMinimized: false,\n  formData: {\n    method: '',\n    url: '',\n    params: '',\n    payload: null,\n  },\n  auth: '',\n  authHeader: '',\n  authLocation: 'header',\n  requestHeaders: [],\n  formSubmitted: false,\n  responseUI: false,\n  apiResponse: {},\n  apiError: null,\n};\n\nconst localState = JSON.parse(sessionStorage.getItem('_post_man'));\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(\n    StoreReducer,\n    localState || initialState\n  );\n  useEffect(() => {\n    sessionStorage.setItem('_post_man', JSON.stringify(state));\n  }, [state]);\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>\n  );\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}