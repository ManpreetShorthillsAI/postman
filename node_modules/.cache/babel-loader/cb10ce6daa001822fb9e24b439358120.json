{"ast":null,"code":"var _jsxFileName = \"/home/shtlp_0172/Desktop/postman/postman_project/src/components/playground/response/ResponseBody.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/mode-html';\nimport 'ace-builds/src-noconflict/theme-tomorrow';\nimport 'ace-builds/src-noconflict/theme-twilight';\nimport style from './response.module.css';\n/* function syntaxHighlight(json) {\n  if (typeof json != 'string') {\n    json = JSON.stringify(json, undefined, 2);\n  }\n\n  json = json\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n\n  return json.replace(\n    /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/g,\n    function (match) {\n      var cls = 'number';\n      if (/^\"/.test(match)) {\n        if (/:$/.test(match)) {\n          cls = 'key';\n        } else {\n          cls = 'string';\n        }\n      } else if (/true|false/.test(match)) {\n        cls = 'boolean';\n      } else if (/null/.test(match)) {\n        cls = 'null';\n      }\n      return '<span class=\"' + cls + '\">' + match + '</span>';\n    }\n  );\n} */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResponseBody = ({\n  data,\n  viewAs,\n  wrap\n}) => {\n  _s();\n\n  const [dark, setDark] = useState(false);\n  console.log();\n  useEffect(() => {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      setDark(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.response_body,\n    children: [viewAs === 'preview' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: typeof data === 'object' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.res_preview,\n        children: JSON.stringify(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: data\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), viewAs === 'raw' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.res_raw,\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: typeof data === 'object' ? JSON.stringify(data, null, 2) : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), viewAs === 'pretty' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pretty_response\",\n      children: typeof data === 'object' ? /*#__PURE__*/_jsxDEV(AceEditor, {\n        mode: \"json\",\n        fontSize: 13,\n        theme: dark ? 'twilight' : 'tomorrow',\n        value: JSON.stringify(data, null, 2),\n        name: \"prettyJsonOutput\",\n        tabSize: 2,\n        editorProps: {\n          $blockScrolling: true\n        },\n        readOnly: true,\n        wrapEnabled: wrap,\n        highlightActiveLine: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AceEditor, {\n        mode: \"html\",\n        fontSize: 13,\n        theme: dark ? 'twilight' : 'tomorrow',\n        value: data,\n        name: \"prettyJsonOutput\",\n        tabSize: 2,\n        editorProps: {\n          $blockScrolling: true\n        },\n        readOnly: true,\n        wrapEnabled: wrap,\n        highlightActiveLine: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResponseBody, \"NIHBMCmnQYc/ThVDFkFE1j89faA=\");\n\n_c = ResponseBody;\nexport default ResponseBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponseBody\");","map":{"version":3,"sources":["/home/shtlp_0172/Desktop/postman/postman_project/src/components/playground/response/ResponseBody.js"],"names":["useEffect","useState","AceEditor","style","ResponseBody","data","viewAs","wrap","dark","setDark","console","log","window","matchMedia","matches","response_body","res_preview","JSON","stringify","__html","res_raw","$blockScrolling"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/mode-html';\nimport 'ace-builds/src-noconflict/theme-tomorrow';\nimport 'ace-builds/src-noconflict/theme-twilight';\nimport style from './response.module.css';\n\n/* function syntaxHighlight(json) {\n  if (typeof json != 'string') {\n    json = JSON.stringify(json, undefined, 2);\n  }\n\n  json = json\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n\n  return json.replace(\n    /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/g,\n    function (match) {\n      var cls = 'number';\n      if (/^\"/.test(match)) {\n        if (/:$/.test(match)) {\n          cls = 'key';\n        } else {\n          cls = 'string';\n        }\n      } else if (/true|false/.test(match)) {\n        cls = 'boolean';\n      } else if (/null/.test(match)) {\n        cls = 'null';\n      }\n      return '<span class=\"' + cls + '\">' + match + '</span>';\n    }\n  );\n} */\n\nconst ResponseBody = ({ data, viewAs, wrap }) => {\n  const [dark, setDark] = useState(false);\n\n  console.log();\n\n  useEffect(() => {\n    if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n    ) {\n      setDark(true);\n    }\n  }, []);\n\n  return (\n    <div className={style.response_body}>\n      {viewAs === 'preview' && (\n        <>\n          {typeof data === 'object' ? (\n            <div className={style.res_preview}>{JSON.stringify(data)}</div>\n          ) : (\n            <div dangerouslySetInnerHTML={{ __html: data }}></div>\n          )}\n        </>\n      )}\n      {viewAs === 'raw' && (\n        <div className={style.res_raw}>\n          <pre>\n            {typeof data === 'object' ? JSON.stringify(data, null, 2) : data}\n          </pre>\n        </div>\n      )}\n      {viewAs === 'pretty' && (\n        <div className=\"pretty_response\">\n          {/* <pre\n            className={wrap ? 'wrap' : ''}\n            dangerouslySetInnerHTML={{ __html: syntaxHighlight(data) }}\n          ></pre> */}\n          {typeof data === 'object' ? (\n            <AceEditor\n              mode=\"json\"\n              fontSize={13}\n              theme={dark ? 'twilight' : 'tomorrow'}\n              value={JSON.stringify(data, null, 2)}\n              name=\"prettyJsonOutput\"\n              tabSize={2}\n              editorProps={{\n                $blockScrolling: true,\n              }}\n              readOnly={true}\n              wrapEnabled={wrap}\n              highlightActiveLine={false}\n            />\n          ) : (\n            <AceEditor\n              mode=\"html\"\n              fontSize={13}\n              theme={dark ? 'twilight' : 'tomorrow'}\n              value={data}\n              name=\"prettyJsonOutput\"\n              tabSize={2}\n              editorProps={{\n                $blockScrolling: true,\n              }}\n              readOnly={true}\n              wrapEnabled={wrap}\n              highlightActiveLine={false}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ResponseBody;\n"]},"metadata":{},"sourceType":"module"}